version: 3

vars:
  SAIL: ./vendor/bin/sail

tasks:
  composer-install:
    desc: Install Composer dependencies
    silent: true
    cmds:
      - test -d 'vendor' && echo "Vendor directory exists, skip" || docker run --rm
        -u "$(id -u):$(id -g)"
        -v "$(pwd):/var/www/html"
        -w /var/www/html
        laravelsail/php82-composer:latest
        composer install --ignore-platform-reqs

  build:
    desc: Build Laravel Sail application image
    cmds:
      - test -f '.env' && echo "Env file exists, skip" || cp .env.example .env
      - task: composer-install
      - task: run
        vars: { cmd: build --no-cache }
      - task: start
      - task: deps
      - task: migrate
      - task: stop

  start:
    desc: Start Laravel Sail containers
    cmds:
      - task: run
        vars: { cmd: up -d }

  stop:
    desc: Stop Laravel Sail containers
    cmds:
      - task: run
        vars: { cmd: down }

  purge:
    desc: Stop Laravel Sail containers and remove volumes
    cmds:
      - task: run
        vars: { cmd: down -v }

  test:
    desc: Run Laravel Sail application tests
    cmds:
      - task: run
        vars: { cmd: test }

  deps:
    desc: Install Composer dependencies
    cmds:
      - task: run
        vars: { cmd: composer install }

  cache:
    desc: Optimize Laravel cache
    cmds:
      - task: run
        vars: { cmd: artisan optimize }
      - task: run
        vars: { cmd: artisan event:cache }
      - task: run
        vars: { cmd: artisan config:cache }
      - task: run
        vars: { cmd: artisan route:cache }
      - task: run
        vars: { cmd: artisan view:cache }
      - task: run
        vars: { cmd: artisan storage:link }

  cache:clear:
    desc: Clear Laravel cache
    cmds:
      - task: run
        vars: { cmd: artisan cache:clear }
      - task: run
        vars: { cmd: artisan config:clear }
      - task: run
        vars: { cmd: artisan event:clear }
      - task: run
        vars: { cmd: artisan optimize:clear }
      - task: run
        vars: { cmd: artisan route:clear }
      - task: run
        vars: { cmd: artisan view:clear }

  migrate:
    desc: Run database migrations
    cmds:
      - task: run
        vars: { cmd: artisan migrate }

  migrate:fresh:
    desc: Recreate database from scratch
    cmds:
      - task: run
        vars: { cmd: artisan migrate:fresh }

  seed:
    desc: Seed initial records into database
    cmds:
      - task: run
        vars: { cmd: artisan migrate:fresh --seed }

  stubs:
    desc: Generate Laravel stubs and model comments
    cmds:
      - task: run
        vars: { cmd: artisan clear-compiled }
      # - task: run
      #   vars: { cmd: artisan ide-helper:generate }
      - task: run
        vars: { cmd: artisan ide-helper:models -W }
      - task: fmt

  shell:
    desc: Attach PHP container console
    cmds:
      - task: run
        vars: { cmd: shell }

  sql:
    desc: Attach SQL container console
    cmds:
      - task: run
        vars: { cmd: artisan db }

  schedule:
    desc: Run Laravel scheduler (cron)
    cmds:
      - task: run
        vars: { cmd: artisan schedule:work }

  queue:
    desc: Run Laravel worker (queue)
    cmds:
      - task: run
        vars: { cmd: artisan queue:listen -v --timeout=0 }

  fmt:
    desc: Run Code Style formatter
    cmds:
      - task: run
        vars: { cmd: composer fmt }

  lint:
    desc: Run static analysis
    cmds:
      - task: run
        vars: { cmd: composer validate }
      - task: run
        vars: { cmd: composer lint }

  run:
    desc: Run command inside of Laravel Sail PHP container (such as artisan, composer, etc)
    silent: true
    requires:
      vars: [cmd]
    cmds:
      - "{{ .SAIL }} {{ .cmd }}"
